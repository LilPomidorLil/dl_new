<mxfile host="app.diagrams.net" modified="2023-01-10T22:27:45.312Z" agent="5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.124 YaBrowser/22.9.3.894 Yowser/2.5 Safari/537.36" etag="yymvQ_RQTNIawCxb_Uxj" version="20.8.3" type="github" pages="10">
  <diagram name="xsdnn::main" id="efa7a0a1-bf9b-a30e-e6df-94a7791c09e9">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="2339" pageHeight="3300" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="3jrJSmBCQ7t12A0o4Kmw-114" value="&lt;p style=&quot;margin: 0px; margin-top: 4px; text-align: center; text-decoration: underline;&quot;&gt;&lt;strong&gt;ClassName&lt;/strong&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;Field&#39;s:&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;Method&#39;s:&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;strokeColor=#003366;shadow=1;fillColor=#D4E1F5;fontColor=#003366" parent="1" vertex="1">
          <mxGeometry x="2090" y="120" width="160" height="140" as="geometry" />
        </mxCell>
        <mxCell id="3jrJSmBCQ7t12A0o4Kmw-115" value="&lt;h1&gt;Слой&lt;/h1&gt;&lt;p&gt;Базовый класс &lt;b&gt;layer &lt;/b&gt;для всех слоев&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;text-align: center;&quot;&gt;//&lt;i&gt;TODO&lt;/i&gt;:&amp;nbsp; подумать, нужно ли использовать &lt;b&gt;node&lt;/b&gt; и наследовать &lt;b&gt;layer&lt;/b&gt; от него? Предварительно: нет, тк &lt;b&gt;tiny&lt;/b&gt;-&lt;b&gt;dnn&lt;/b&gt; использует &lt;b&gt;node&lt;/b&gt; и &lt;b&gt;edge&lt;/b&gt; как собственные контейнеры. У меня будет реализовано через &lt;b&gt;Eigen::TensorBase. Ответ: нужно. Это холдеры для параметров и их типов. Эту идею можно взять к себе&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="190" height="250" as="geometry" />
        </mxCell>
        <mxCell id="3jrJSmBCQ7t12A0o4Kmw-116" value="&lt;h1&gt;Template&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="2100" y="50" width="190" height="50" as="geometry" />
        </mxCell>
        <mxCell id="3jrJSmBCQ7t12A0o4Kmw-117" value="&lt;p style=&quot;margin: 0px; margin-top: 4px; text-align: center; text-decoration: underline;&quot;&gt;&lt;b&gt;xsdnn::layer&lt;/b&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;Field&#39;s:&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;protected:&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;bool initialized_ # layer init?&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;private:&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 8px;&quot;&gt;bool trainable_&amp;nbsp; &amp;nbsp;# update grad?&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 8px;&quot;&gt;weight_init # инициализатор весов&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 8px;&quot;&gt;bias_init # инициализатор смещений&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;TensorBase? fwd_in_data_&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;TensorBase? fwd_out_data_&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;TensorBase? bwd_in_data_&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;TensorBase? bwd_in_grad_&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;TensorBase? bwd_out_data_&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;TensorBase? bwd_out_grad_&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;Method&#39;s:&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a href=&quot;data:page/id,acLyr5f8MV2qwVlqdKkI&quot;&gt;&lt;font face=&quot;ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace&quot; color=&quot;#d2a8ff&quot; style=&quot;background-color: rgb(0, 0, 0);&quot;&gt;forward&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a href=&quot;data:page/id,P51iXEZZl-BP7aw9WZGj&quot;&gt;&lt;font face=&quot;ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace&quot; color=&quot;#d2a8ff&quot; style=&quot;background-color: rgb(0, 0, 0);&quot;&gt;forward_propagation&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a href=&quot;data:page/id,9vZ8QekkStvvB2-BGn0U&quot;&gt;&lt;font face=&quot;ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace&quot; color=&quot;#d2a8ff&quot; style=&quot;background-color: rgb(0, 0, 0);&quot;&gt;backward&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a href=&quot;data:page/id,YzGOiIOgP3fO_uxTNOQc&quot;&gt;&lt;font face=&quot;ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace&quot; color=&quot;#d2a8ff&quot; style=&quot;background-color: rgb(0, 0, 0);&quot;&gt;back_propagation&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;span style=&quot;font-family: ui-monospace, SFMono-Regular, &amp;quot;SF Mono&amp;quot;, Menlo, Consolas, &amp;quot;Liberation Mono&amp;quot;, monospace; background-color: rgb(13, 17, 23);&quot;&gt;&lt;a style=&quot;&quot; href=&quot;data:page/id,1ntwXYWYcS74xLM6uAJB&quot;&gt;&lt;font color=&quot;#d2a8ff&quot;&gt;update_weight&lt;/font&gt;&lt;/a&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a style=&quot;background-color: rgb(0, 0, 0);&quot; href=&quot;data:page/id,imFPhnd7Cz6RNdqDAHEO&quot;&gt;&lt;font face=&quot;ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace&quot; color=&quot;#d2a8ff&quot;&gt;weight_init&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a style=&quot;background-color: rgb(0, 0, 0);&quot; href=&quot;data:page/id,p6dzrHT5QFA6u9v4Chr_&quot;&gt;&lt;font color=&quot;#d2a8ff&quot;&gt;init_weight&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px; margin-left: 8px;&quot;&gt;&lt;a style=&quot;background-color: rgb(0, 0, 0);&quot; href=&quot;data:page/id,uzz6QVAgYd6YLyIYvyyA&quot;&gt;&lt;font color=&quot;#d2a8ff&quot;&gt;setup&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=ui-monospace, SFMono-Regular, &quot;SF Mono&quot;, Menlo, Consolas, &quot;Liberation Mono&quot;, monospace;html=1;strokeColor=#003366;shadow=1;fillColor=#D4E1F5;fontColor=#003366" parent="1" vertex="1">
          <mxGeometry x="40" y="290" width="260" height="390" as="geometry" />
        </mxCell>
        <mxCell id="_2fx6bxfBk6hNO2VCk2_-2" value="&lt;h1&gt;Сериализация&lt;/h1&gt;&lt;p&gt;Как сделать понятное верхнеуровневое API для сохранения \ загрузки сетки из файла?&amp;nbsp;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="790" y="190" width="190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="FIbBD87SsG-cr0epnL6o-1" value="&lt;h1&gt;Общие вопросы&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=13;" parent="1" vertex="1">
          <mxGeometry x="1050" y="10" width="270" height="120" as="geometry" />
        </mxCell>
        <mxCell id="FIbBD87SsG-cr0epnL6o-2" value="&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;background-color: rgb(255, 0, 0);&quot;&gt;Функция печати тензора как numpy - неприоритет&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Как обращаться к измерению ниже по индексу? (доступен только slice), можно по-другому? нужно?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Нужен ли холдер для значений нейронов и градиентов слоя (&lt;b&gt;node-&amp;gt;get_data(), node-&amp;gt;get_grad()&lt;/b&gt;), в старой версии это были &lt;i&gt;m_z, m_a, m_din&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Edge &lt;/i&gt;это структура, которая хранит состояния слоя до вычисления и после. Зачем это нужно? Можно ли сделать проще?&lt;/li&gt;&lt;li&gt;Создание легкорасширяемой архитектуры, для добавления нового исполнителя {aka ExecutionProvider}&lt;/li&gt;&lt;/ul&gt;" style="text;strokeColor=none;fillColor=none;html=1;whiteSpace=wrap;verticalAlign=middle;overflow=hidden;fontSize=13;" parent="1" vertex="1">
          <mxGeometry x="1030" y="50" width="390" height="190" as="geometry" />
        </mxCell>
        <mxCell id="jkYTFeYgwC2KfP83L8r2-1" value="&lt;h1&gt;Sequential&lt;/h1&gt;&lt;p&gt;Реализация контейнера для&amp;nbsp; последовательной сети&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;text-align: center;&quot;&gt;//&lt;i&gt;TODO&lt;/i&gt;:&amp;nbsp; как ее сделать?&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="710" width="190" height="110" as="geometry" />
        </mxCell>
        <mxCell id="vlH5JGkJwxlnS23OrFSM-1" value="&lt;h1&gt;Общие ключевые моменты&lt;/h1&gt;&lt;p&gt;1. Реализуем 3 типа контейнеров - &lt;span style=&quot;background-color: rgb(51, 153, 255);&quot;&gt;weights, bias, data&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2. Реализовать граф через концепцию &lt;span style=&quot;background-color: rgb(255, 102, 102);&quot;&gt;&#39;producer&#39;-&amp;gt;&#39;consumer&#39;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;3. Реализовать абстракцию описания размеров (мета информация о размере контейнера shape3d et al).&amp;nbsp;&lt;/p&gt;&lt;p&gt;4. Выравнивание weights &amp;amp;&amp;amp; bias должно происходить после их инициализации в методе setup.&lt;/p&gt;&lt;p&gt;Выравнивание data происходит в момент, когда известен размер батча - отдельный метод.&lt;/p&gt;&lt;p&gt;5. Как реализовать сериализацию сетки? Какой интерфейс, какой формат? Планы на будущее: поддержка onnx формата.&lt;/p&gt;&lt;p&gt;6. 3 контейнера weights, bias, data также должны быть описаны is_trainable?&amp;nbsp;&lt;/p&gt;&lt;p&gt;7. Как создать интерфейс без передачи размера батча, а использовать только `set_in_data` для 1 слоя, а далее вычислять размеры автоматически?&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="392" y="10" width="370" height="410" as="geometry" />
        </mxCell>
        <mxCell id="-aHUlDHQ0JRG_QK1f5Hc-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="vlH5JGkJwxlnS23OrFSM-2" target="-aHUlDHQ0JRG_QK1f5Hc-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vlH5JGkJwxlnS23OrFSM-2" value="&lt;h1&gt;Ультра короткий план реализации&lt;/h1&gt;&lt;p&gt;1. Реализация мета описания типов данных aka {index3d, vec_type}&lt;/p&gt;&lt;p&gt;2. Реализация графовой концепции aka {node, edge}&lt;/p&gt;" style="text;html=1;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="1540" y="10" width="420" height="120" as="geometry" />
        </mxCell>
        <mxCell id="T77I6tmEs8zFwJfBUPsZ-1" value="" style="endArrow=classic;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="vlH5JGkJwxlnS23OrFSM-1" target="_2fx6bxfBk6hNO2VCk2_-2" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="920" y="340" as="sourcePoint" />
            <mxPoint x="970" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-aHUlDHQ0JRG_QK1f5Hc-1" value="&lt;h1&gt;Следующие шаги реализации&lt;/h1&gt;&lt;p&gt;1. Создание интерфейса для сериализации данных.&amp;nbsp;&lt;br&gt;&lt;/p&gt;&lt;p&gt;2. Прототипирование класса слоя (layer : node)&lt;/p&gt;" style="text;html=1;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=none;fillColor=#f8cecc;strokeColor=#b85450;" parent="1" vertex="1">
          <mxGeometry x="1540" y="200" width="420" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="acLyr5f8MV2qwVlqdKkI" name="layer::forward">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Bmp8aAYqUwf2WiW74yyu-1" value="&lt;font style=&quot;font-size: 17px;&quot;&gt;В tiny-dnn метод &lt;b&gt;forward&lt;/b&gt;() используются для создания контейнера, в который кладутся данные из кучи вычислительного графика -&amp;gt; они преобразуются в интерфейс слоя... Зачем это нужно? Хз&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="3" width="580" height="90" as="geometry" />
        </mxCell>
        <mxCell id="Bmp8aAYqUwf2WiW74yyu-2" value="С большой доли вероятности данный метод мне не нужен, т.к &lt;b&gt;Eigen&lt;/b&gt; сам беспокоится об различных контейнерах.&lt;br&gt;&lt;br&gt;//&lt;b&gt;TODO&lt;/b&gt;: подумать про то, как организовать работу с несколькими измерениями TensorBase объектов. Предполагаемое решение - в методе forward() преобразовать данные к 4 мерному тензору. forward_propagation &amp;amp;&amp;amp; back_propagation будут работать только с 4 мерными тензорами, уменьшая размерность до нужного масштаба. Тогда появляется вопрос, как инициализировать слой?&amp;nbsp;&lt;br&gt;//&lt;b&gt;TODO&lt;/b&gt;: разработать логику аллоцирования памяти и преобразования входных данных в 4 мерный тензор и обратно.&lt;br&gt;//&lt;b&gt;THINK&lt;/b&gt;: можно ли в этом методе делать выравнивание? и подавать эти данные дальше для вычислений?&amp;nbsp;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Если данные выравнивать, они уже где то должны храниться до выравнивания. Где? Мб Edge-Node структуры?" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=17;" parent="1" vertex="1">
          <mxGeometry x="2" y="100" width="580" height="340" as="geometry" />
        </mxCell>
        <mxCell id="uD0cILj6ARvdNZH_asx5-5" value="" style="endArrow=none;html=1;edgeStyle=orthogonalEdgeStyle;rounded=0;" parent="1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="280" y="610" as="sourcePoint" />
            <mxPoint x="280" y="730" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="uD0cILj6ARvdNZH_asx5-6" value="parent" style="edgeLabel;resizable=0;html=1;align=left;verticalAlign=bottom;fontSize=13;" parent="uD0cILj6ARvdNZH_asx5-5" connectable="0" vertex="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="10" y="20" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="uD0cILj6ARvdNZH_asx5-7" value="child" style="edgeLabel;resizable=0;html=1;align=right;verticalAlign=bottom;fontSize=14;" parent="uD0cILj6ARvdNZH_asx5-5" connectable="0" vertex="1">
          <mxGeometry x="1" relative="1" as="geometry">
            <mxPoint x="-10" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="uD0cILj6ARvdNZH_asx5-9" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;text-decoration:underline;&quot;&gt;&lt;b&gt;layer::forward&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;аллокация этих контейнеров происходит только один раз, при первом проходе сетки&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;fwd_in_data&amp;nbsp; &amp;nbsp;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;= Tensor_4D().allocate()&amp;nbsp; &amp;nbsp;// создать необходимые измерения. см.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(43, 43, 43); color: rgb(169, 183, 198); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace;&quot;&gt;create_new_dim&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;fwd_out_data&amp;nbsp; = Tensor_4D().allocate()&amp;nbsp; &amp;nbsp;// аналогично&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;alligned_fwd_in_data&amp;nbsp; &amp;nbsp;= AllignedTensor_4D(...)&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;alligned_fwd_out_data = AllignedTensor_4D(...)&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry y="470" width="580" height="100" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="P51iXEZZl-BP7aw9WZGj" name="layer::forward_propagation">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="9vZ8QekkStvvB2-BGn0U" name="layer::backward">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="YzGOiIOgP3fO_uxTNOQc" name="layer::back_propagation">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="imFPhnd7Cz6RNdqDAHEO" name="layer::weight_init">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="JN_ip96GImt4-f0A4xz0-1" value="&lt;h1&gt;Метод инициализации trainable W&amp;amp;B&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry y="10" width="580" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="1ntwXYWYcS74xLM6uAJB" name="layer::update_weight">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="p6dzrHT5QFA6u9v4Chr_" name="layer::init_weight">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="uzz6QVAgYd6YLyIYvyyA" name="layer::setup">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="TAu-FBMdEZbMYaXYSiBB-1" value="&lt;h1&gt;Ключевой метод для аллокации всех контейнеров&lt;/h1&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="270" y="30" width="630" height="70" as="geometry" />
        </mxCell>
        <mxCell id="7N-nF8bvZyM1MKo4GqTC-1" value="&lt;h3&gt;Общая концепция метода:&lt;/h3&gt;&lt;div&gt;1. Проверка, что можем сделать connection соединения &#39;producer&#39;-&amp;gt;&#39;consumer&#39;&lt;/div&gt;&lt;div&gt;2. Аллокация &#39;consumer&#39; контейнеров - fwd_out_, bwd_out контейнеров :: условно&lt;/div&gt;&lt;div&gt;3. Аллокация и инициализация weights &amp;amp;&amp;amp; bias, если они еще не инициализированы или их необходимо сбросить.&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="10" y="120" width="570" height="210" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-4" value="" style="ellipse;html=1;shape=startState;fillColor=#000000;strokeColor=#ff0000;" parent="1" vertex="1">
          <mxGeometry x="785" y="140" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-5" value="" style="edgeStyle=orthogonalEdgeStyle;html=1;verticalAlign=bottom;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-4" target="jQYCyNbgpwOg8DW3xvRe-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="875" y="200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-7" value="check_size of in_shape vec &amp;amp;&amp;amp; out_shape vec" style="rhombus;whiteSpace=wrap;html=1;fillColor=#ffffc0;strokeColor=#ff0000;" parent="1" vertex="1">
          <mxGeometry x="700" y="240" width="200" height="130" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-8" value="no" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=bottom;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-7" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="960" y="305" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-9" value="yes" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=top;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-7" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="800" y="480" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-10" value="" style="ellipse;html=1;shape=endState;fillColor=#000000;strokeColor=#ff0000;" parent="1" vertex="1">
          <mxGeometry x="960" y="290" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-11" target="jQYCyNbgpwOg8DW3xvRe-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-11" value="Аллокация через ith_node_out() consumer контейнеров" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="685" y="480" width="230" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-12" value="need init w&amp;amp;b?" style="rhombus;whiteSpace=wrap;html=1;fillColor=#ffffc0;strokeColor=#ff0000;" parent="1" vertex="1">
          <mxGeometry x="725" y="590" width="150" height="80" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-13" value="no" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=bottom;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-12" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="960" y="630" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-14" value="yes" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=top;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-12" target="jQYCyNbgpwOg8DW3xvRe-18" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="800" y="730" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-16" value="" style="ellipse;html=1;shape=endState;fillColor=#000000;strokeColor=#ff0000;" parent="1" vertex="1">
          <mxGeometry x="960" y="615" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="jQYCyNbgpwOg8DW3xvRe-18" target="jQYCyNbgpwOg8DW3xvRe-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-18" value="&lt;a href=&quot;data:page/id,imFPhnd7Cz6RNdqDAHEO&quot;&gt;Аллокация и инициализация w&amp;amp;b&lt;/a&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="685" y="710" width="230" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jQYCyNbgpwOg8DW3xvRe-19" value="" style="ellipse;html=1;shape=endState;fillColor=#000000;strokeColor=#ff0000;" parent="1" vertex="1">
          <mxGeometry x="785" y="797" width="30" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="WnbfVUyJ56-XTK0HdZ6o" name="serial::interface">
    <mxGraphModel dx="1312" dy="804" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="583" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-1" value="&lt;h1&gt;Идея и интерфейс сериализации&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;" parent="1" vertex="1">
          <mxGeometry y="20" width="1160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-3" value="Необходимо реализовать сохранение и загрузку сети из файла.&amp;nbsp;&lt;br&gt;&lt;br&gt;Вопросы:&lt;br&gt;&lt;ol&gt;&lt;li&gt;В каком формате должна храниться обученная модель? Ответ: создать кастомный формат или использовать идею из xsdnn_old?&lt;/li&gt;&lt;li&gt;Как будет описан граф сети? Ответ: в виде JSON файла.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;В JSON обязательно хранить:&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Пользовательское название (архитектуру) сети&lt;/li&gt;&lt;li&gt;Кол-во слоев (в том числе активации, которые хранятся просто как факт того, что они там есть)&lt;/li&gt;&lt;li&gt;Каждый слой должен содержать meta информацию о себе - размеры weights &amp;amp; bias, например.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry y="80" width="1160" height="280" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-4" value="&lt;h1&gt;Ванильное представление сериализации&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;" parent="1" vertex="1">
          <mxGeometry y="430" width="1160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-20" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;template &amp;lt;spec&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;b&gt;struct save-load&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ field1: Type&lt;br&gt;+ field2: Type&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ cerial_meta(json-node, node-index, param-holder): void&lt;br&gt;+ cerial_wb(in_shape): void&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ decerial_wb(json-node, in_shape, cerial_vec, param-holder): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="520" width="370" height="190" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-21" value="" style="shape=singleArrow;whiteSpace=wrap;html=1;arrowWidth=0.4;arrowSize=0.4;align=left;verticalAlign=top;fillColor=rgb(255, 255, 255);" parent="1" vertex="1">
          <mxGeometry x="460" y="585" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-23" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;cerial_meta&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;width=160;height=40;boundedLbl=1;verticalAlign=middle;align=left;spacingLeft=5;" parent="1" vertex="1">
          <mxGeometry x="590" y="520" width="340" height="190" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-25" value="writing_to_json a.k.a.&amp;nbsp;&lt;br&gt;{fill_meta_info}" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="670" y="605" width="180" height="40" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-26" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;cerial_wb&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;width=160;height=40;boundedLbl=1;verticalAlign=middle;align=left;spacingLeft=5;" parent="1" vertex="1">
          <mxGeometry x="1030" y="520" width="400" height="190" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-32" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=14;" parent="1" source="jVqgmW2yrg8SBwkRNUJC-28" target="jVqgmW2yrg8SBwkRNUJC-31" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-28" value="trainable?" style="rhombus;whiteSpace=wrap;html=1;fillColor=#ffffc0;strokeColor=#ff0000;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="1040" y="565" width="100" height="55" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-30" value="y" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=top;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;fontSize=14;" parent="1" source="jVqgmW2yrg8SBwkRNUJC-28" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="1090" y="640" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-31" value="" style="ellipse;html=1;shape=endState;fillColor=#000000;strokeColor=#ff0000;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="1180" y="578" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-35" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=14;" parent="1" source="jVqgmW2yrg8SBwkRNUJC-33" target="jVqgmW2yrg8SBwkRNUJC-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-33" value="copy data to 1-d vector" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="1030" y="640" width="180" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-34" value="call io::cerial_vec()" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;labelBackgroundColor=#FFFFFF;fontSize=14;fillColor=rgb(255, 255, 255);" parent="1" vertex="1">
          <mxGeometry x="1240" y="640" width="180" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-36" value="" style="shape=singleArrow;whiteSpace=wrap;html=1;arrowWidth=0.4;arrowSize=0.4;align=left;verticalAlign=top;fillColor=rgb(255, 255, 255);rotation=90;" parent="1" vertex="1">
          <mxGeometry x="160" y="750" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-37" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;decerial_wb&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;" style="shape=umlFrame;whiteSpace=wrap;html=1;width=160;height=40;boundedLbl=1;verticalAlign=middle;align=left;spacingLeft=5;" parent="1" vertex="1">
          <mxGeometry x="40" y="880" width="340" height="310" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-38" value="На вход подается json-noda, контейнер входных концептов, холдер для параметров и прочитанный из бинарного файла вектор весов и смещений&amp;nbsp;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="40" y="940" width="340" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-39" value="trainable?" style="rhombus;whiteSpace=wrap;html=1;fillColor=#ffffc0;strokeColor=#ff0000;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="40" y="1000" width="130" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-40" value="no" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=bottom;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;fontSize=14;" parent="1" source="jVqgmW2yrg8SBwkRNUJC-39" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="230" y="1030" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-41" value="yes" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=top;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;fontSize=14;" parent="1" source="jVqgmW2yrg8SBwkRNUJC-39" edge="1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="105" y="1080" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-42" value="" style="ellipse;html=1;shape=endState;fillColor=#000000;strokeColor=#ff0000;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="230" y="1015" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="jVqgmW2yrg8SBwkRNUJC-43" value="Установить значения как необходимо" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;labelBackgroundColor=#FFFFFF;fontSize=14;" parent="1" vertex="1">
          <mxGeometry x="40" y="1080" width="300" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
